
MorsePractice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000054e  000005e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800106  00800106  000005e8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000618  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015bd  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ab5  00000000  00000000  00001d4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ab0  00000000  00000000  00002802  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  000032b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083a  00000000  00000000  000035dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d84  00000000  00000000  00003e16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00004b9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__ctors_end>
   4:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
   8:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
   c:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  10:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  14:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  18:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  1c:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  20:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  24:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  28:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  2c:	0c 94 c3 01 	jmp	0x386	; 0x386 <__vector_11>
  30:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  34:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  38:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  3c:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  40:	0c 94 b4 01 	jmp	0x368	; 0x368 <__vector_16>
  44:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  48:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  4c:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  50:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  54:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  58:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  5c:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  60:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>
  64:	0c 94 c2 00 	jmp	0x184	; 0x184 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 00       	nop
  6a:	01 03       	mulsu	r16, r17
  6c:	03 05       	cpc	r16, r3
  6e:	06 06       	cpc	r0, r22
  70:	07 07       	cpc	r16, r23
  72:	08 07       	cpc	r16, r24
  74:	07 07       	cpc	r16, r23
  76:	05 05       	cpc	r16, r5
  78:	04 04       	cpc	r0, r4
  7a:	02 02       	muls	r16, r18
  7c:	01 00       	.word	0x0001	; ????
  7e:	01 01       	movw	r0, r2
  80:	01 01       	movw	r0, r2
  82:	02 04       	cpc	r0, r2
  84:	06 08       	sbc	r0, r6
  86:	0a 0e       	add	r0, r26
  88:	10 14       	cp	r1, r0
  8a:	18 1b       	sub	r17, r24
  8c:	20 24       	eor	r2, r0
  8e:	28 2c       	mov	r2, r8
  90:	2f 33       	cpi	r18, 0x3F	; 63
  92:	36 38       	cpi	r19, 0x86	; 134
  94:	3b 3e       	cpi	r19, 0xEB	; 235
  96:	3d 3e       	cpi	r19, 0xED	; 237
  98:	3f 3d       	cpi	r19, 0xDF	; 223
  9a:	3c 3a       	cpi	r19, 0xAC	; 172
  9c:	37 34       	cpi	r19, 0x47	; 71
  9e:	31 2d       	mov	r19, r1
  a0:	28 24       	eor	r2, r8
  a2:	1f 1a       	sub	r1, r31
  a4:	16 12       	cpse	r1, r22
  a6:	0e 0a       	sbc	r0, r30
  a8:	07 05       	cpc	r16, r7
  aa:	02 03       	mulsu	r16, r18
  ac:	03 04       	cpc	r0, r3
  ae:	05 08       	sbc	r0, r5
  b0:	0c 10       	cpse	r0, r12
  b2:	15 1c       	adc	r1, r5
  b4:	23 29       	or	r18, r3
  b6:	31 39       	cpi	r19, 0x91	; 145
  b8:	41 49       	sbci	r20, 0x91	; 145
  ba:	51 59       	subi	r21, 0x91	; 145
  bc:	60 66       	ori	r22, 0x60	; 96
  be:	6d 71       	andi	r22, 0x1D	; 29
  c0:	75 79       	andi	r23, 0x95	; 149
  c2:	7c 7b       	andi	r23, 0xBC	; 188
  c4:	7b 7a       	andi	r23, 0xAB	; 171
  c6:	76 73       	andi	r23, 0x36	; 54
  c8:	6e 67       	ori	r22, 0x7E	; 126
  ca:	61 5a       	subi	r22, 0xA1	; 161
  cc:	52 49       	sbci	r21, 0x92	; 146
  ce:	40 38       	cpi	r20, 0x80	; 128
  d0:	2f 26       	eor	r2, r31
  d2:	1f 18       	sub	r1, r15
  d4:	11 0d       	add	r17, r1
  d6:	09 05       	cpc	r16, r9
  d8:	05 05       	cpc	r16, r5
  da:	06 09       	sbc	r16, r6
  dc:	0e 13       	cpse	r16, r30
  de:	1a 23       	and	r17, r26
  e0:	2c 38       	cpi	r18, 0x8C	; 140
  e2:	42 4e       	sbci	r20, 0xE2	; 226
  e4:	5a 66       	ori	r21, 0x6A	; 106
  e6:	72 7e       	andi	r23, 0xE2	; 226
  e8:	8a 94       	dec	r8
  ea:	9d a6       	std	Y+45, r9	; 0x2d
  ec:	ad b2       	in	r10, 0x1d	; 29
  ee:	b7 ba       	out	0x17, r11	; 23
  f0:	b9 b8       	out	0x09, r11	; 9
  f2:	b6 b0       	in	r11, 0x06	; 6
  f4:	aa a2       	std	Y+34, r10	; 0x22
  f6:	98 8e       	std	Y+24, r9	; 0x18
  f8:	83 77       	andi	r24, 0x73	; 115
  fa:	6a 5d       	subi	r22, 0xDA	; 218
  fc:	51 43       	sbci	r21, 0x31	; 49
  fe:	37 2d       	mov	r19, r7
 100:	23 19       	sub	r18, r3
 102:	12 0d       	add	r17, r2
 104:	08 07       	cpc	r16, r24
 106:	07 09       	sbc	r16, r7
 108:	0d 13       	cpse	r16, r29
 10a:	1b 25       	eor	r17, r11
 10c:	30 3d       	cpi	r19, 0xD0	; 208
 10e:	4c 5b       	subi	r20, 0xBC	; 188
 110:	6b 7b       	andi	r22, 0xBB	; 187
 112:	8b 9c       	mul	r8, r11
 114:	ab bb       	out	0x1b, r26	; 27
 116:	c8 d4       	rcall	.+2448   	; 0xaa8 <__stack+0x1a9>
 118:	e0 e8       	ldi	r30, 0x80	; 128
 11a:	ef f4       	brid	.+58     	; 0x156 <__do_copy_data>

0000011c <_ZL10tone_table>:
 11c:	f8 f6 f3 ed e5 db d0 c3 b4 a5 94 84 73 62 53 44     ............sbSD
 12c:	36 29 1e 16 0f 0a 08 08 0a 0f 16 1e 29 36 43 53     6)..........)6CS
 13c:	62 73 84 94 a5 b4 c3 d0 db e5 ed f3 f6 00           bs............

0000014a <__ctors_end>:
 14a:	11 24       	eor	r1, r1
 14c:	1f be       	out	0x3f, r1	; 63
 14e:	cf ef       	ldi	r28, 0xFF	; 255
 150:	d8 e0       	ldi	r29, 0x08	; 8
 152:	de bf       	out	0x3e, r29	; 62
 154:	cd bf       	out	0x3d, r28	; 61

00000156 <__do_copy_data>:
 156:	11 e0       	ldi	r17, 0x01	; 1
 158:	a0 e0       	ldi	r26, 0x00	; 0
 15a:	b1 e0       	ldi	r27, 0x01	; 1
 15c:	ee e4       	ldi	r30, 0x4E	; 78
 15e:	f5 e0       	ldi	r31, 0x05	; 5
 160:	02 c0       	rjmp	.+4      	; 0x166 <__do_copy_data+0x10>
 162:	05 90       	lpm	r0, Z+
 164:	0d 92       	st	X+, r0
 166:	a6 30       	cpi	r26, 0x06	; 6
 168:	b1 07       	cpc	r27, r17
 16a:	d9 f7       	brne	.-10     	; 0x162 <__do_copy_data+0xc>

0000016c <__do_clear_bss>:
 16c:	21 e0       	ldi	r18, 0x01	; 1
 16e:	a6 e0       	ldi	r26, 0x06	; 6
 170:	b1 e0       	ldi	r27, 0x01	; 1
 172:	01 c0       	rjmp	.+2      	; 0x176 <.do_clear_bss_start>

00000174 <.do_clear_bss_loop>:
 174:	1d 92       	st	X+, r1

00000176 <.do_clear_bss_start>:
 176:	a9 30       	cpi	r26, 0x09	; 9
 178:	b2 07       	cpc	r27, r18
 17a:	e1 f7       	brne	.-8      	; 0x174 <.do_clear_bss_loop>
 17c:	0e 94 89 01 	call	0x312	; 0x312 <main>
 180:	0c 94 a5 02 	jmp	0x54a	; 0x54a <_exit>

00000184 <__bad_interrupt>:
 184:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000188 <_Z13ReadInput_dotv>:

uint16_t WPM_to_wavenum(uint8_t WPM) {
	// Dot[s] = 60[s] / (50 * WPM)
	// rep = Dot[us] / ovf_interval(=32us) / SINE_TABLE_N
	return 37500 / (uint16_t)WPM / TONE_TABLE_N - RISETIME;
}
 188:	89 b1       	in	r24, 0x09	; 9
 18a:	86 fb       	bst	r24, 6
 18c:	88 27       	eor	r24, r24
 18e:	80 f9       	bld	r24, 0
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	89 27       	eor	r24, r25
 194:	08 95       	ret

00000196 <_Z18WriteOutput_keyouth>:
 196:	88 23       	and	r24, r24
 198:	11 f0       	breq	.+4      	; 0x19e <_Z18WriteOutput_keyouth+0x8>
 19a:	28 9a       	sbi	0x05, 0	; 5
 19c:	08 95       	ret
 19e:	28 98       	cbi	0x05, 0	; 5
 1a0:	08 95       	ret

000001a2 <_Z9GPIO_initv>:
 1a2:	8f ef       	ldi	r24, 0xFF	; 255
 1a4:	84 b9       	out	0x04, r24	; 4
 1a6:	8e ef       	ldi	r24, 0xFE	; 254
 1a8:	87 b9       	out	0x07, r24	; 7
 1aa:	8f e3       	ldi	r24, 0x3F	; 63
 1ac:	8a b9       	out	0x0a, r24	; 10
 1ae:	15 b8       	out	0x05, r1	; 5
 1b0:	18 b8       	out	0x08, r1	; 8
 1b2:	80 ec       	ldi	r24, 0xC0	; 192
 1b4:	8b b9       	out	0x0b, r24	; 11
 1b6:	08 95       	ret

000001b8 <_Z10Timer_initv>:
 1b8:	83 e2       	ldi	r24, 0x23	; 35
 1ba:	84 bd       	out	0x24, r24	; 36
 1bc:	15 bc       	out	0x25, r1	; 37
 1be:	18 bc       	out	0x28, r1	; 40
 1c0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 1c4:	88 e0       	ldi	r24, 0x08	; 8
 1c6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 1ca:	80 e4       	ldi	r24, 0x40	; 64
 1cc:	9f e1       	ldi	r25, 0x1F	; 31
 1ce:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1d2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 1e2:	08 95       	ret

000001e4 <_Z7Tick_onv>:
 1e4:	e1 e8       	ldi	r30, 0x81	; 129
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	81 60       	ori	r24, 0x01	; 1
 1ec:	80 83       	st	Z, r24
 1ee:	08 95       	ret

000001f0 <_Z10Tone_beginv>:
 1f0:	85 b5       	in	r24, 0x25	; 37
 1f2:	81 60       	ori	r24, 0x01	; 1
 1f4:	85 bd       	out	0x25, r24	; 37
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	0e 94 cb 00 	call	0x196	; 0x196 <_Z18WriteOutput_keyouth>
 1fc:	e8 e6       	ldi	r30, 0x68	; 104
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	2c e1       	ldi	r18, 0x1C	; 28
 202:	31 e0       	ldi	r19, 0x01	; 1
 204:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <pwm_ovf_flag>
 208:	88 23       	and	r24, r24
 20a:	e1 f3       	breq	.-8      	; 0x204 <_Z10Tone_beginv+0x14>
 20c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <pwm_ovf_flag>
 210:	84 91       	lpm	r24, Z
 212:	88 bd       	out	0x28, r24	; 40
 214:	31 96       	adiw	r30, 0x01	; 1
 216:	e2 17       	cp	r30, r18
 218:	f3 07       	cpc	r31, r19
 21a:	a1 f7       	brne	.-24     	; 0x204 <_Z10Tone_beginv+0x14>
 21c:	08 95       	ret

0000021e <_Z11Tone_repeatj>:
 21e:	bc 01       	movw	r22, r24
 220:	89 2b       	or	r24, r25
 222:	b9 f0       	breq	.+46     	; 0x252 <_Z11Tone_repeatj+0x34>
 224:	40 e0       	ldi	r20, 0x00	; 0
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	29 e4       	ldi	r18, 0x49	; 73
 22a:	31 e0       	ldi	r19, 0x01	; 1
 22c:	ec e1       	ldi	r30, 0x1C	; 28
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <pwm_ovf_flag>
 234:	99 23       	and	r25, r25
 236:	e1 f3       	breq	.-8      	; 0x230 <_Z11Tone_repeatj+0x12>
 238:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <pwm_ovf_flag>
 23c:	94 91       	lpm	r25, Z
 23e:	98 bd       	out	0x28, r25	; 40
 240:	31 96       	adiw	r30, 0x01	; 1
 242:	e2 17       	cp	r30, r18
 244:	f3 07       	cpc	r31, r19
 246:	a1 f7       	brne	.-24     	; 0x230 <_Z11Tone_repeatj+0x12>
 248:	4f 5f       	subi	r20, 0xFF	; 255
 24a:	5f 4f       	sbci	r21, 0xFF	; 255
 24c:	64 17       	cp	r22, r20
 24e:	75 07       	cpc	r23, r21
 250:	69 f7       	brne	.-38     	; 0x22c <_Z11Tone_repeatj+0xe>
 252:	08 95       	ret

00000254 <_Z8Tone_endv>:
 254:	eb e1       	ldi	r30, 0x1B	; 27
 256:	f1 e0       	ldi	r31, 0x01	; 1
 258:	27 e6       	ldi	r18, 0x67	; 103
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <pwm_ovf_flag>
 260:	88 23       	and	r24, r24
 262:	e1 f3       	breq	.-8      	; 0x25c <_Z8Tone_endv+0x8>
 264:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <pwm_ovf_flag>
 268:	84 91       	lpm	r24, Z
 26a:	88 bd       	out	0x28, r24	; 40
 26c:	31 97       	sbiw	r30, 0x01	; 1
 26e:	e2 17       	cp	r30, r18
 270:	f3 07       	cpc	r31, r19
 272:	a1 f7       	brne	.-24     	; 0x25c <_Z8Tone_endv+0x8>
 274:	85 b5       	in	r24, 0x25	; 37
 276:	8e 7f       	andi	r24, 0xFE	; 254
 278:	85 bd       	out	0x25, r24	; 37
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	0e 94 cb 00 	call	0x196	; 0x196 <_Z18WriteOutput_keyouth>
 280:	08 95       	ret

00000282 <_Z10Tone_spacej>:
 282:	ac 01       	movw	r20, r24
 284:	89 2b       	or	r24, r25
 286:	71 f0       	breq	.+28     	; 0x2a4 <_Z10Tone_spacej+0x22>
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	9d e2       	ldi	r25, 0x2D	; 45
 28e:	85 e5       	ldi	r24, 0x55	; 85
 290:	8a 95       	dec	r24
 292:	f1 f7       	brne	.-4      	; 0x290 <_Z10Tone_spacej+0xe>
 294:	00 00       	nop
 296:	91 50       	subi	r25, 0x01	; 1
 298:	d1 f7       	brne	.-12     	; 0x28e <_Z10Tone_spacej+0xc>
 29a:	2f 5f       	subi	r18, 0xFF	; 255
 29c:	3f 4f       	sbci	r19, 0xFF	; 255
 29e:	42 17       	cp	r20, r18
 2a0:	53 07       	cpc	r21, r19
 2a2:	a1 f7       	brne	.-24     	; 0x28c <_Z10Tone_spacej+0xa>
 2a4:	08 95       	ret

000002a6 <_Z12Dot_functionj>:
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	ec 01       	movw	r28, r24
 2ac:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <_Z10Tone_beginv>
 2b0:	ce 01       	movw	r24, r28
 2b2:	0e 94 0f 01 	call	0x21e	; 0x21e <_Z11Tone_repeatj>
 2b6:	0e 94 2a 01 	call	0x254	; 0x254 <_Z8Tone_endv>
 2ba:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
 2be:	ce 01       	movw	r24, r28
 2c0:	0e 94 41 01 	call	0x282	; 0x282 <_Z10Tone_spacej>
 2c4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 2c8:	88 23       	and	r24, r24
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <_Z12Dot_functionj+0x2a>
 2cc:	82 e0       	ldi	r24, 0x02	; 2
 2ce:	01 c0       	rjmp	.+2      	; 0x2d2 <_Z12Dot_functionj+0x2c>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	08 95       	ret

000002d8 <_Z13Dash_functionj>:
 2d8:	cf 93       	push	r28
 2da:	df 93       	push	r29
 2dc:	ec 01       	movw	r28, r24
 2de:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <_Z10Tone_beginv>
 2e2:	ce 01       	movw	r24, r28
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	0e 94 0f 01 	call	0x21e	; 0x21e <_Z11Tone_repeatj>
 2ec:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <dot_input_flag>
 2f0:	ce 01       	movw	r24, r28
 2f2:	0e 94 0f 01 	call	0x21e	; 0x21e <_Z11Tone_repeatj>
 2f6:	0e 94 2a 01 	call	0x254	; 0x254 <_Z8Tone_endv>
 2fa:	ce 01       	movw	r24, r28
 2fc:	0e 94 41 01 	call	0x282	; 0x282 <_Z10Tone_spacej>
 300:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <dot_input_flag>
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	91 11       	cpse	r25, r1
 308:	01 c0       	rjmp	.+2      	; 0x30c <_Z13Dash_functionj+0x34>
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	df 91       	pop	r29
 30e:	cf 91       	pop	r28
 310:	08 95       	ret

00000312 <main>:
 312:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_Z9GPIO_initv>
 316:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <_Z10Timer_initv>
 31a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <_Z8I2C_Initv>
 31e:	0e 94 61 02 	call	0x4c2	; 0x4c2 <_Z12I2C_LCD_Initv>
 322:	78 94       	sei
 324:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z7Tick_onv>
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	d1 e0       	ldi	r29, 0x01	; 1
 32c:	c0 e0       	ldi	r28, 0x00	; 0
 32e:	81 11       	cpse	r24, r1
 330:	0a c0       	rjmp	.+20     	; 0x346 <main+0x34>
 332:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <dot_input_flag>
 336:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 33a:	81 11       	cpse	r24, r1
 33c:	0c c0       	rjmp	.+24     	; 0x356 <main+0x44>
 33e:	8d 2f       	mov	r24, r29
 340:	91 11       	cpse	r25, r1
 342:	01 c0       	rjmp	.+2      	; 0x346 <main+0x34>
 344:	8c 2f       	mov	r24, r28
 346:	81 30       	cpi	r24, 0x01	; 1
 348:	21 f4       	brne	.+8      	; 0x352 <main+0x40>
 34a:	8e e1       	ldi	r24, 0x1E	; 30
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12Dot_functionj>
 352:	82 30       	cpi	r24, 0x02	; 2
 354:	21 f4       	brne	.+8      	; 0x35e <main+0x4c>
 356:	8e e1       	ldi	r24, 0x1E	; 30
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <_Z13Dash_functionj>
 35e:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <dot_input_flag>
 362:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <__data_end>
 366:	e3 cf       	rjmp	.-58     	; 0x32e <main+0x1c>

00000368 <__vector_16>:

// Timer Interrupt
ISR(TIMER0_OVF_vect) {
 368:	1f 92       	push	r1
 36a:	0f 92       	push	r0
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	0f 92       	push	r0
 370:	11 24       	eor	r1, r1
 372:	8f 93       	push	r24
	pwm_ovf_flag = 1;
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <pwm_ovf_flag>
}
 37a:	8f 91       	pop	r24
 37c:	0f 90       	pop	r0
 37e:	0f be       	out	0x3f, r0	; 63
 380:	0f 90       	pop	r0
 382:	1f 90       	pop	r1
 384:	18 95       	reti

00000386 <__vector_11>:

ISR(TIMER1_COMPA_vect) {
 386:	1f 92       	push	r1
 388:	0f 92       	push	r0
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	0f 92       	push	r0
 38e:	11 24       	eor	r1, r1
 390:	2f 93       	push	r18
 392:	3f 93       	push	r19
 394:	4f 93       	push	r20
 396:	5f 93       	push	r21
 398:	6f 93       	push	r22
 39a:	7f 93       	push	r23
 39c:	8f 93       	push	r24
 39e:	9f 93       	push	r25
 3a0:	af 93       	push	r26
 3a2:	bf 93       	push	r27
 3a4:	ef 93       	push	r30
 3a6:	ff 93       	push	r31
	if (ReadInput_dot()) dot_input_flag = 1;
 3a8:	0e 94 c4 00 	call	0x188	; 0x188 <_Z13ReadInput_dotv>
 3ac:	88 23       	and	r24, r24
 3ae:	19 f0       	breq	.+6      	; 0x3b6 <__vector_11+0x30>
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <dot_input_flag>
	if (ReadInput_dash()) dash_input_flag = 1;
 3b6:	4f 99       	sbic	0x09, 7	; 9
 3b8:	03 c0       	rjmp	.+6      	; 0x3c0 <__vector_11+0x3a>
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 3c0:	ff 91       	pop	r31
 3c2:	ef 91       	pop	r30
 3c4:	bf 91       	pop	r27
 3c6:	af 91       	pop	r26
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	7f 91       	pop	r23
 3ce:	6f 91       	pop	r22
 3d0:	5f 91       	pop	r21
 3d2:	4f 91       	pop	r20
 3d4:	3f 91       	pop	r19
 3d6:	2f 91       	pop	r18
 3d8:	0f 90       	pop	r0
 3da:	0f be       	out	0x3f, r0	; 63
 3dc:	0f 90       	pop	r0
 3de:	1f 90       	pop	r1
 3e0:	18 95       	reti

000003e2 <_Z8I2C_Initv>:
void I2C_Init() {
	/* f_SCL = f_CPU / (16 + 2 * TWBR * N) */
	/* N: Prescaler <-- TWPS1,0 (1, 4, 16, 64) */
	/* e.g. f_CPU = 8MHz, f_SCL = 100kHz --> TWSR[TWPS]=0b00 & TWBR=32 */
	
	TWSR = 0x00;	// N = 1
 3e2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = (uint8_t) F_CPU / 200000UL - 8;	// f_SCL = 100kHz
 3e6:	88 ef       	ldi	r24, 0xF8	; 248
 3e8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 3ec:	08 95       	ret

000003ee <_Z9I2C_Startv>:
}

void I2C_Start() {
	TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);
 3ee:	84 ea       	ldi	r24, 0xA4	; 164
 3f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	loop_until_bit_is_set(TWCR, TWINT);
 3f4:	ec eb       	ldi	r30, 0xBC	; 188
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	80 81       	ld	r24, Z
 3fa:	88 23       	and	r24, r24
 3fc:	ec f7       	brge	.-6      	; 0x3f8 <_Z9I2C_Startv+0xa>
}
 3fe:	08 95       	ret

00000400 <_Z8I2C_Stopv>:

void I2C_Stop() {
	TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
 400:	84 e9       	ldi	r24, 0x94	; 148
 402:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	loop_until_bit_is_set(TWCR, TWSTO);
 406:	ec eb       	ldi	r30, 0xBC	; 188
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	80 81       	ld	r24, Z
 40c:	84 ff       	sbrs	r24, 4
 40e:	fd cf       	rjmp	.-6      	; 0x40a <_Z8I2C_Stopv+0xa>
}
 410:	08 95       	ret

00000412 <_Z8I2C_Sendh>:

void I2C_Send(uint8_t data) {
	TWDR = data;
 412:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = _BV(TWINT) | _BV(TWEN);
 416:	84 e8       	ldi	r24, 0x84	; 132
 418:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	loop_until_bit_is_set(TWCR, TWINT);
 41c:	ec eb       	ldi	r30, 0xBC	; 188
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	80 81       	ld	r24, Z
 422:	88 23       	and	r24, r24
 424:	ec f7       	brge	.-6      	; 0x420 <_Z8I2C_Sendh+0xe>
}
 426:	08 95       	ret

00000428 <_Z20I2C_LCD_SendControlsPhh>:
	I2C_Stop();
	
	_delay_ms(1);

	return 0;
}
 428:	ef 92       	push	r14
 42a:	ff 92       	push	r15
 42c:	0f 93       	push	r16
 42e:	1f 93       	push	r17
 430:	cf 93       	push	r28
 432:	df 93       	push	r29
 434:	8c 01       	movw	r16, r24
 436:	d6 2f       	mov	r29, r22
 438:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z9I2C_Startv>
 43c:	8c e7       	ldi	r24, 0x7C	; 124
 43e:	0e 94 09 02 	call	0x412	; 0x412 <_Z8I2C_Sendh>
 442:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 446:	88 7f       	andi	r24, 0xF8	; 248
 448:	88 31       	cpi	r24, 0x18	; 24
 44a:	79 f5       	brne	.+94     	; 0x4aa <_Z20I2C_LCD_SendControlsPhh+0x82>
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	0e 94 09 02 	call	0x412	; 0x412 <_Z8I2C_Sendh>
 452:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 456:	88 7f       	andi	r24, 0xF8	; 248
 458:	88 32       	cpi	r24, 0x28	; 40
 45a:	49 f5       	brne	.+82     	; 0x4ae <_Z20I2C_LCD_SendControlsPhh+0x86>
 45c:	dd 23       	and	r29, r29
 45e:	d9 f0       	breq	.+54     	; 0x496 <_Z20I2C_LCD_SendControlsPhh+0x6e>
 460:	78 01       	movw	r14, r16
 462:	d1 50       	subi	r29, 0x01	; 1
 464:	8d 2f       	mov	r24, r29
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	01 96       	adiw	r24, 0x01	; 1
 46a:	e8 01       	movw	r28, r16
 46c:	c8 0f       	add	r28, r24
 46e:	d9 1f       	adc	r29, r25
 470:	09 eb       	ldi	r16, 0xB9	; 185
 472:	10 e0       	ldi	r17, 0x00	; 0
 474:	f7 01       	movw	r30, r14
 476:	81 91       	ld	r24, Z+
 478:	7f 01       	movw	r14, r30
 47a:	0e 94 09 02 	call	0x412	; 0x412 <_Z8I2C_Sendh>
 47e:	f8 01       	movw	r30, r16
 480:	80 81       	ld	r24, Z
 482:	88 7f       	andi	r24, 0xF8	; 248
 484:	88 32       	cpi	r24, 0x28	; 40
 486:	a9 f4       	brne	.+42     	; 0x4b2 <_Z20I2C_LCD_SendControlsPhh+0x8a>
 488:	f1 e2       	ldi	r31, 0x21	; 33
 48a:	fa 95       	dec	r31
 48c:	f1 f7       	brne	.-4      	; 0x48a <_Z20I2C_LCD_SendControlsPhh+0x62>
 48e:	00 00       	nop
 490:	ec 16       	cp	r14, r28
 492:	fd 06       	cpc	r15, r29
 494:	79 f7       	brne	.-34     	; 0x474 <_Z20I2C_LCD_SendControlsPhh+0x4c>
 496:	0e 94 00 02 	call	0x400	; 0x400 <_Z8I2C_Stopv>
 49a:	89 ef       	ldi	r24, 0xF9	; 249
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <_Z20I2C_LCD_SendControlsPhh+0x76>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <_Z20I2C_LCD_SendControlsPhh+0x7c>
 4a4:	00 00       	nop
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <_Z20I2C_LCD_SendControlsPhh+0x8c>
 4aa:	8f ef       	ldi	r24, 0xFF	; 255
 4ac:	03 c0       	rjmp	.+6      	; 0x4b4 <_Z20I2C_LCD_SendControlsPhh+0x8c>
 4ae:	8f ef       	ldi	r24, 0xFF	; 255
 4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <_Z20I2C_LCD_SendControlsPhh+0x8c>
 4b2:	8f ef       	ldi	r24, 0xFF	; 255
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	ff 90       	pop	r15
 4be:	ef 90       	pop	r14
 4c0:	08 95       	ret

000004c2 <_Z12I2C_LCD_Initv>:

uint8_t I2C_LCD_Init() {
 4c2:	cf 93       	push	r28
 4c4:	df 93       	push	r29
 4c6:	cd b7       	in	r28, 0x3d	; 61
 4c8:	de b7       	in	r29, 0x3e	; 62
 4ca:	29 97       	sbiw	r28, 0x09	; 9
 4cc:	0f b6       	in	r0, 0x3f	; 63
 4ce:	f8 94       	cli
 4d0:	de bf       	out	0x3e, r29	; 62
 4d2:	0f be       	out	0x3f, r0	; 63
 4d4:	cd bf       	out	0x3d, r28	; 61
	uint8_t init_data1[] = {0x38, 0x39, 0x14, 0x70, 0x56, 0x6c};
 4d6:	86 e0       	ldi	r24, 0x06	; 6
 4d8:	e0 e0       	ldi	r30, 0x00	; 0
 4da:	f1 e0       	ldi	r31, 0x01	; 1
 4dc:	de 01       	movw	r26, r28
 4de:	11 96       	adiw	r26, 0x01	; 1
 4e0:	01 90       	ld	r0, Z+
 4e2:	0d 92       	st	X+, r0
 4e4:	8a 95       	dec	r24
 4e6:	e1 f7       	brne	.-8      	; 0x4e0 <_Z12I2C_LCD_Initv+0x1e>
	uint8_t init_data2[] = {0x38, 0x0C, 0x01};
 4e8:	88 e3       	ldi	r24, 0x38	; 56
 4ea:	8f 83       	std	Y+7, r24	; 0x07
 4ec:	8c e0       	ldi	r24, 0x0C	; 12
 4ee:	88 87       	std	Y+8, r24	; 0x08
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	89 87       	std	Y+9, r24	; 0x09
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4f4:	8f e0       	ldi	r24, 0x0F	; 15
 4f6:	97 e2       	ldi	r25, 0x27	; 39
 4f8:	01 97       	sbiw	r24, 0x01	; 1
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <_Z12I2C_LCD_Initv+0x36>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <_Z12I2C_LCD_Initv+0x3c>
 4fe:	00 00       	nop
	uint8_t st;

	_delay_ms(40);

	I2C_Init();
 500:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <_Z8I2C_Initv>

	st = I2C_LCD_SendControls(init_data1, sizeof(init_data1));
 504:	66 e0       	ldi	r22, 0x06	; 6
 506:	ce 01       	movw	r24, r28
 508:	01 96       	adiw	r24, 0x01	; 1
 50a:	0e 94 14 02 	call	0x428	; 0x428 <_Z20I2C_LCD_SendControlsPhh>
	if (st != 0) return st;
 50e:	81 11       	cpse	r24, r1
 510:	13 c0       	rjmp	.+38     	; 0x538 <_Z12I2C_LCD_Initv+0x76>
 512:	ef e4       	ldi	r30, 0x4F	; 79
 514:	f3 ec       	ldi	r31, 0xC3	; 195
 516:	31 97       	sbiw	r30, 0x01	; 1
 518:	f1 f7       	brne	.-4      	; 0x516 <_Z12I2C_LCD_Initv+0x54>
 51a:	00 c0       	rjmp	.+0      	; 0x51c <_Z12I2C_LCD_Initv+0x5a>
 51c:	00 00       	nop
	_delay_ms(200);

	st = I2C_LCD_SendControls(init_data2, sizeof(init_data2));
 51e:	63 e0       	ldi	r22, 0x03	; 3
 520:	ce 01       	movw	r24, r28
 522:	07 96       	adiw	r24, 0x07	; 7
 524:	0e 94 14 02 	call	0x428	; 0x428 <_Z20I2C_LCD_SendControlsPhh>
	if (st != 0) return st;
 528:	81 11       	cpse	r24, r1
 52a:	06 c0       	rjmp	.+12     	; 0x538 <_Z12I2C_LCD_Initv+0x76>
 52c:	e7 e8       	ldi	r30, 0x87	; 135
 52e:	f3 e1       	ldi	r31, 0x13	; 19
 530:	31 97       	sbiw	r30, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <_Z12I2C_LCD_Initv+0x6e>
 534:	00 c0       	rjmp	.+0      	; 0x536 <_Z12I2C_LCD_Initv+0x74>
 536:	00 00       	nop
	_delay_ms(20);

	return 0;
}
 538:	29 96       	adiw	r28, 0x09	; 9
 53a:	0f b6       	in	r0, 0x3f	; 63
 53c:	f8 94       	cli
 53e:	de bf       	out	0x3e, r29	; 62
 540:	0f be       	out	0x3f, r0	; 63
 542:	cd bf       	out	0x3d, r28	; 61
 544:	df 91       	pop	r29
 546:	cf 91       	pop	r28
 548:	08 95       	ret

0000054a <_exit>:
 54a:	f8 94       	cli

0000054c <__stop_program>:
 54c:	ff cf       	rjmp	.-2      	; 0x54c <__stop_program>
